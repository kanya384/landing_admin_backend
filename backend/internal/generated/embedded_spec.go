// Code generated by go-swagger; DO NOT EDIT.

package generated

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Landing Backend REST",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/advantage_photo": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "create advantage photo",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "advantage_id",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "order",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/AdvantagePhoto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantage_photo/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "updates advantage photo oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantage_photo/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get photos list by advantage id",
        "parameters": [
          {
            "type": "string",
            "description": "String id of the advantage",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns advantage photos list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvantagePhoto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "delete advantage photo by id",
        "parameters": [
          {
            "type": "string",
            "description": "String id of the advantage photo to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete advantage success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get advantages list",
        "responses": {
          "200": {
            "description": "returns advantages list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Advantage"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "create advantage",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "update advantage",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "updates advantages oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get advantage by id",
        "parameters": [
          {
            "type": "string",
            "description": "string ID of the advantage",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "get advantage by id success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "delete advantage by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the advantage to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete advantage success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "authentication path",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "регистрация успешна",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "403": {
            "description": "Authentication Fail",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/months": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create month",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "update month",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/months/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "get months by year id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the year",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "month get success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Month"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete month by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "month delete success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create photo",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "month_id",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "фото успешно добавлено",
            "schema": {
              "$ref": "#/definitions/HodPhoto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "updates photos oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "get photos by month id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "months photos get success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HodPhoto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete photo by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete photo success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "authorization check",
        "responses": {
          "200": {
            "description": "пользователь авторизован",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "401": {
            "description": "необходимо авторизоваться",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          }
        }
      }
    },
    "/posters": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "gets filtered posters list",
        "responses": {
          "200": {
            "description": "returns filtered posters",
            "schema": {
              "$ref": "#/definitions/GetPostersResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "create poster",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "постер успешно создан",
            "schema": {
              "$ref": "#/definitions/Poster"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "update poster",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "string",
            "name": "id",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          },
          {
            "type": "boolean",
            "name": "active",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "photo",
            "in": "formData"
          },
          {
            "type": "integer",
            "name": "order",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "постер успешно создан",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posters/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "updates posters oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posters/{posterID}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "get poster by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the poster to get",
            "name": "posterID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns requested poster",
            "schema": {
              "$ref": "#/definitions/Poster"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "delete poster by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the poster to get",
            "name": "posterID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns requested poster",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "create user",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "пользователь успешно создан",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/years": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "gets years list",
        "responses": {
          "200": {
            "description": "returns years list",
            "schema": {
              "$ref": "#/definitions/GetYearsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create year",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "год успешно создан",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "update year",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/years/{id}": {
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete year by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the year to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "year delete success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Advantage": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AdvantagePhoto": {
      "type": "object",
      "properties": {
        "advantage_id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthenticateRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "login"
        },
        "pass": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "AuthenticateResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "error"
        },
        "refresh_token": {
          "type": "string",
          "example": "fewerHHsasqw122231"
        },
        "token": {
          "type": "string",
          "example": "asdkjkzxcqw1290090"
        }
      }
    },
    "GetPostersRequest": {
      "type": "object",
      "properties": {
        "active": {
          "description": "if active true, returns only active posters, else returns all",
          "type": "boolean",
          "example": false
        },
        "name": {
          "description": "title filter",
          "type": "string",
          "example": "Акция"
        }
      }
    },
    "GetPostersResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Poster"
      }
    },
    "GetYearsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Year"
      }
    },
    "HodPhoto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "month_id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "Month": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        },
        "year_id": {
          "type": "string"
        }
      }
    },
    "Poster": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "photo": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResultResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "сообщение от бэкэнда"
        }
      }
    },
    "SwapItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "SwapStruct": {
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/SwapItem"
        },
        "second": {
          "$ref": "#/definitions/SwapItem"
        }
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "login"
        },
        "name": {
          "type": "string",
          "example": "пользователь"
        },
        "pass": {
          "type": "string",
          "example": "password"
        },
        "role": {
          "type": "string",
          "example": "роль"
        }
      }
    },
    "Year": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Landing Backend REST",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/advantage_photo": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "create advantage photo",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "advantage_id",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "order",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/AdvantagePhoto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantage_photo/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "updates advantage photo oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantage_photo/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get photos list by advantage id",
        "parameters": [
          {
            "type": "string",
            "description": "String id of the advantage",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns advantage photos list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvantagePhoto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "delete advantage photo by id",
        "parameters": [
          {
            "type": "string",
            "description": "String id of the advantage photo to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete advantage success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get advantages list",
        "responses": {
          "200": {
            "description": "returns advantages list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Advantage"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "create advantage",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "update advantage",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "updates advantages oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/advantages/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "get advantage by id",
        "parameters": [
          {
            "type": "string",
            "description": "string ID of the advantage",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "get advantage by id success",
            "schema": {
              "$ref": "#/definitions/Advantage"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "advantages"
        ],
        "summary": "delete advantage by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the advantage to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete advantage success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "authentication path",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "регистрация успешна",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "403": {
            "description": "Authentication Fail",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/months": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create month",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "update month",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Month"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/months/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "get months by year id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the year",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "month get success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Month"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete month by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "month delete success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create photo",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "month_id",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "фото успешно добавлено",
            "schema": {
              "$ref": "#/definitions/HodPhoto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "updates photos oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/photos/{id}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "get photos by month id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "months photos get success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HodPhoto"
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete photo by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the month to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "delete photo success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "authorization check",
        "responses": {
          "200": {
            "description": "пользователь авторизован",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "401": {
            "description": "необходимо авторизоваться",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          }
        }
      }
    },
    "/posters": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "gets filtered posters list",
        "responses": {
          "200": {
            "description": "returns filtered posters",
            "schema": {
              "$ref": "#/definitions/GetPostersResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "create poster",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "постер успешно создан",
            "schema": {
              "$ref": "#/definitions/Poster"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "update poster",
        "parameters": [
          {
            "type": "file",
            "description": "The file to upload",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "string",
            "name": "id",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "title",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "description",
            "in": "formData",
            "required": true
          },
          {
            "type": "boolean",
            "name": "active",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "photo",
            "in": "formData"
          },
          {
            "type": "integer",
            "name": "order",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "постер успешно создан",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posters/orders": {
      "post": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "updates posters oders",
        "parameters": [
          {
            "description": "swap item orders",
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SwapStruct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "положения успешно обновленны",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/posters/{posterID}": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "get poster by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the poster to get",
            "name": "posterID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns requested poster",
            "schema": {
              "$ref": "#/definitions/Poster"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "posters"
        ],
        "summary": "delete poster by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the poster to get",
            "name": "posterID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "returns requested poster",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "create user",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "пользователь успешно создан",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/years": {
      "get": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "gets years list",
        "responses": {
          "200": {
            "description": "returns years list",
            "schema": {
              "$ref": "#/definitions/GetYearsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "create year",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "год успешно создан",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "update year",
        "parameters": [
          {
            "name": "params",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request success",
            "schema": {
              "$ref": "#/definitions/Year"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/years/{id}": {
      "delete": {
        "security": [
          {
            "Token": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "hod"
        ],
        "summary": "delete year by id",
        "parameters": [
          {
            "type": "string",
            "description": "String ID of the year to delete",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "year delete success",
            "schema": {
              "$ref": "#/definitions/ResultResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Advantage": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AdvantagePhoto": {
      "type": "object",
      "properties": {
        "advantage_id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthenticateRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "login"
        },
        "pass": {
          "type": "string",
          "example": "password"
        }
      }
    },
    "AuthenticateResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "error"
        },
        "refresh_token": {
          "type": "string",
          "example": "fewerHHsasqw122231"
        },
        "token": {
          "type": "string",
          "example": "asdkjkzxcqw1290090"
        }
      }
    },
    "GetPostersRequest": {
      "type": "object",
      "properties": {
        "active": {
          "description": "if active true, returns only active posters, else returns all",
          "type": "boolean",
          "example": false
        },
        "name": {
          "description": "title filter",
          "type": "string",
          "example": "Акция"
        }
      }
    },
    "GetPostersResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Poster"
      }
    },
    "GetYearsResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Year"
      }
    },
    "HodPhoto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "month_id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "Month": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        },
        "year_id": {
          "type": "string"
        }
      }
    },
    "Poster": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "photo": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResultResponse": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "string",
          "example": "сообщение от бэкэнда"
        }
      }
    },
    "SwapItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        }
      }
    },
    "SwapStruct": {
      "type": "object",
      "properties": {
        "first": {
          "$ref": "#/definitions/SwapItem"
        },
        "second": {
          "$ref": "#/definitions/SwapItem"
        }
      }
    },
    "UserCreateRequest": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string",
          "example": "login"
        },
        "name": {
          "type": "string",
          "example": "пользователь"
        },
        "pass": {
          "type": "string",
          "example": "password"
        },
        "role": {
          "type": "string",
          "example": "роль"
        }
      }
    },
    "Year": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}

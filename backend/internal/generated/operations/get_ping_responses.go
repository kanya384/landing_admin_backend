// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"landing_admin_backend/models"
)

// GetPingOKCode is the HTTP code returned for type GetPingOK
const GetPingOKCode int = 200

/*GetPingOK пользователь авторизован

swagger:response getPingOK
*/
type GetPingOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResultResponse `json:"body,omitempty"`
}

// NewGetPingOK creates GetPingOK with default headers values
func NewGetPingOK() *GetPingOK {

	return &GetPingOK{}
}

// WithPayload adds the payload to the get ping o k response
func (o *GetPingOK) WithPayload(payload *models.ResultResponse) *GetPingOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ping o k response
func (o *GetPingOK) SetPayload(payload *models.ResultResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPingOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPingUnauthorizedCode is the HTTP code returned for type GetPingUnauthorized
const GetPingUnauthorizedCode int = 401

/*GetPingUnauthorized необходимо авторизоваться

swagger:response getPingUnauthorized
*/
type GetPingUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ResultResponse `json:"body,omitempty"`
}

// NewGetPingUnauthorized creates GetPingUnauthorized with default headers values
func NewGetPingUnauthorized() *GetPingUnauthorized {

	return &GetPingUnauthorized{}
}

// WithPayload adds the payload to the get ping unauthorized response
func (o *GetPingUnauthorized) WithPayload(payload *models.ResultResponse) *GetPingUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ping unauthorized response
func (o *GetPingUnauthorized) SetPayload(payload *models.ResultResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPingUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

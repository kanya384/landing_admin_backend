// Code generated by go-swagger; DO NOT EDIT.

package project_info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"landing_admin_backend/models"
)

// PatchProjectInfoOKCode is the HTTP code returned for type PatchProjectInfoOK
const PatchProjectInfoOKCode int = 200

/*PatchProjectInfoOK постер успешно обновлен

swagger:response patchProjectInfoOK
*/
type PatchProjectInfoOK struct {

	/*
	  In: Body
	*/
	Payload *models.ProjectInfo `json:"body,omitempty"`
}

// NewPatchProjectInfoOK creates PatchProjectInfoOK with default headers values
func NewPatchProjectInfoOK() *PatchProjectInfoOK {

	return &PatchProjectInfoOK{}
}

// WithPayload adds the payload to the patch project info o k response
func (o *PatchProjectInfoOK) WithPayload(payload *models.ProjectInfo) *PatchProjectInfoOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch project info o k response
func (o *PatchProjectInfoOK) SetPayload(payload *models.ProjectInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchProjectInfoOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchProjectInfoBadRequestCode is the HTTP code returned for type PatchProjectInfoBadRequest
const PatchProjectInfoBadRequestCode int = 400

/*PatchProjectInfoBadRequest Bad request

swagger:response patchProjectInfoBadRequest
*/
type PatchProjectInfoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResultResponse `json:"body,omitempty"`
}

// NewPatchProjectInfoBadRequest creates PatchProjectInfoBadRequest with default headers values
func NewPatchProjectInfoBadRequest() *PatchProjectInfoBadRequest {

	return &PatchProjectInfoBadRequest{}
}

// WithPayload adds the payload to the patch project info bad request response
func (o *PatchProjectInfoBadRequest) WithPayload(payload *models.ResultResponse) *PatchProjectInfoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch project info bad request response
func (o *PatchProjectInfoBadRequest) SetPayload(payload *models.ResultResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchProjectInfoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchProjectInfoInternalServerErrorCode is the HTTP code returned for type PatchProjectInfoInternalServerError
const PatchProjectInfoInternalServerErrorCode int = 500

/*PatchProjectInfoInternalServerError Internal Server Error

swagger:response patchProjectInfoInternalServerError
*/
type PatchProjectInfoInternalServerError struct {
}

// NewPatchProjectInfoInternalServerError creates PatchProjectInfoInternalServerError with default headers values
func NewPatchProjectInfoInternalServerError() *PatchProjectInfoInternalServerError {

	return &PatchProjectInfoInternalServerError{}
}

// WriteResponse to the client
func (o *PatchProjectInfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}

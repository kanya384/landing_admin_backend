package editable

// Code generated by gowrap. DO NOT EDIT.
// template: https://raw.githubusercontent.com/hexdigest/gowrap/bd05dcaf6963696b62ac150a98a59674456c6c53/templates/logrus
// gowrap: http://github.com/hexdigest/gowrap

//go:generate gowrap gen -p landing_admin_backend/internal/services/editable -i Editable -t https://raw.githubusercontent.com/hexdigest/gowrap/bd05dcaf6963696b62ac150a98a59674456c6c53/templates/logrus -o editable_with_logger.go -l ""

import (
	"context"
	"landing_admin_backend/internal/domain"

	"github.com/sirupsen/logrus"
)

// EditableWithLogrus implements Editable that is instrumented with logrus logger
type EditableWithLogrus struct {
	_log  *logrus.Entry
	_base Editable
}

// NewEditableWithLogrus instruments an implementation of the Editable with simple logging
func NewEditableWithLogrus(base Editable, log *logrus.Entry) EditableWithLogrus {
	return EditableWithLogrus{
		_base: base,
		_log:  log,
	}
}

// CreateOrUpdate implements Editable
func (_d EditableWithLogrus) CreateOrUpdate(ctx context.Context, editable domain.Editable) (err error) {
	_d._log.WithFields(logrus.Fields(map[string]interface{}{
		"ctx":      ctx,
		"editable": editable})).Debug("EditableWithLogrus: calling CreateOrUpdate")
	defer func() {
		if err != nil {
			_d._log.WithFields(logrus.Fields(map[string]interface{}{
				"err": err})).Error("EditableWithLogrus: method CreateOrUpdate returned an error")
		} else {
			_d._log.WithFields(logrus.Fields(map[string]interface{}{
				"err": err})).Debug("EditableWithLogrus: method CreateOrUpdate finished")
		}
	}()
	return _d._base.CreateOrUpdate(ctx, editable)
}

// Get implements Editable
func (_d EditableWithLogrus) Get(ctx context.Context) (ediatables []*domain.Editable, err error) {
	_d._log.WithFields(logrus.Fields(map[string]interface{}{
		"ctx": ctx})).Debug("EditableWithLogrus: calling Get")
	defer func() {
		if err != nil {
			_d._log.WithFields(logrus.Fields(map[string]interface{}{
				"ediatables": ediatables,
				"err":        err})).Error("EditableWithLogrus: method Get returned an error")
		} else {
			_d._log.WithFields(logrus.Fields(map[string]interface{}{
				"ediatables": ediatables,
				"err":        err})).Debug("EditableWithLogrus: method Get finished")
		}
	}()
	return _d._base.Get(ctx)
}
